
################################### Data Configuration ###################################
TrainData(ProtoData(files = "train.list", type = "proto"))

################################### Algorithm Configuration ###################################
Settings(
    learning_rate_decay_a = 1e-05,
    learning_rate_decay_b = 0.0,
    learning_rate = 0.0005,
    batch_size = 128,
    num_batches_per_get_parameter = 1,
    algorithm = 'sgd',
    num_batches_per_send_parameter = 1,
    learning_method = 'rmsprop',
)

################################### Network Configuration ###################################
Layer(type = "data", name = "input", size = 20)
Layer(inputs = [Input("input", parameter_name = "_layer1.w")], name = "layer1", bias = Bias(parameter_name = "_layer1.bias"), active_type = "relu", type = "fc", size = 13)
Layer(inputs = [Input("layer1", parameter_name = "_layer2.w")], name = "layer2", bias = Bias(parameter_name = "_layer2.bias"), active_type = "relu", type = "fc", size = 11)
Layer(inputs = [Input("layer2", parameter_name = "_layer3.w")], name = "layer3", bias = Bias(parameter_name = "_layer3.bias"), active_type = "relu", type = "fc", size = 7)
Layer(inputs = [Input("layer3", parameter_name = "_output.w")], bias = Bias(parameter_name = "_output.bias"), type = "fc", active_type = "softmax", name = "output", size = 2)
Layer(type = "data", name = "value", size = 1)
Layer(inputs = [Input("value")], type = "addto", name = "abs_value", active_type = "abs")
Layer(inputs = [Input("abs_value")], type = "addto", name = "exp_abs_value", active_type = "exponential")
Layer(type = "data", name = "label", size = 1)
Layer(inputs = [Input("output"), Input("label")], type = "multi-class-cross-entropy", name = "cost")
Inputs("input", "value", "label")
Evaluator(inputs = ['output', 'label'], name = 'classification_error', type = 'classification_error')
Outputs("cost")
